#!/system/bin/sh
#
# Copyright - √çcaro Hoff <icarohoff@gmail.com>

# "Current" and "default" profiles.
current=/data/blackscreen/blackscreen.profile
default=/data/blackscreen/balance.profile

# Import the "global tunables" for our Kernel modification API...
if [ -L $current ]; then
	# ...from "current" profile after first "bkt profile" usage.
	source $current
else
	# ...from "balance" profile if "bkt profile" was never used.
	source $default
fi

# Message the kmsg device to indicate this script is running.
echo "Entering <$1> dimension..." | tee /dev/kmsg

# blackscreen profiles to be loaded from "bkt" or "spectrum".
profiler() {
	profile=$1
	if [ -f /data/blackscreen/${profile}.profile ]; then
		echo "Switching to <$profile> profile..." | tee /dev/kmsg
		source /data/blackscreen/${profile}.profile
		ln -s -f /data/blackscreen/${profile}.profile $current
	else
		echo "This profile is not available!" | tee /dev/kmsg
	fi
}

# The function responsible for tuning based on the exposed profile.
tuning() {
	# Switch the I/O scheduler for all MMC blocks.
	echo "$iosched" > /sys/block/sda/queue/scheduler
	echo "$iosched" > /sys/block/sde/queue/scheduler

	# If encrypted, switch the DM blocks' I/O scheduler as well.
	if [ "$(getprop ro.crypto.state)" = "encrypted" ]; then
		echo "$iosched" > /sys/block/dm-0/queue/scheduler
		echo "$iosched" > /sys/block/dm-1/queue/scheduler
	fi

	# Notify the system property that we changed the I/O scheduler.
	setprop sys.io.scheduler $iosched

	# Set the read-ahead value for all MMC blocks.
	for block_device in /sys/block/*
	do
		echo "$readahead" > $block_device/queue/read_ahead_kb
	done

	# Switch on/off filesystem sync unconditionally.
	echo "$fsync" > /sys/module/sync/parameters/fsync_enabled

	# Set the proper idle GPU frequency.
	echo "$gpupwrlvl" > /sys/class/kgsl/kgsl-3d0/default_pwrlevel
}

spectrum() {
	echo "Setting up spectrum support..." | tee /dev/kmsg
	setprop spectrum.support 1
	setprop persist.spectrum.kernel "blackscreen"
	# Set the spectrum profile if not already set.
	if [ ! -f /data/property/persist.spectrum.profile ]; then
		echo "Setting spectrum profile to <$spec>..." | tee /dev/kmsg
		setprop persist.spectrum.profile "$spec"
	fi
}

# Query for the input profile passed to this script.
case $1 in
	balance)
		profiler balance
		tuning
		;;
	performance)
		profiler performance
		tuning
		;;
	battery)
		profiler battery
		tuning
		;;
	gaming)
		profiler gaming
		tuning
		;;
	spectrum)
		spectrum
		;;
esac
